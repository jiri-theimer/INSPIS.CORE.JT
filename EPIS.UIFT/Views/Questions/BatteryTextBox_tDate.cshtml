@model UIFT.Models.IOtazka
@inject AppConfiguration AppConfig
@inject UIFT.Repository.RepositoryFactory factory
@{
    int f21id = Model.Odpovedi[0].pid;
    var persistentData = this.Context.Items["PersistantData"] as UIFT.PersistantDataStorage;

    DateTime? odpoved = null;
    if (Model.VyplneneOdpovedi.Count > 0)
    {
        DateTime x;
        if (DateTime.TryParse(Model.VyplneneOdpovedi[0].Value, out x))
        {
            odpoved = x;
        }
    }

    // vytvoreni atributu
    string attrs = "";
    string help = "";
    if (!string.IsNullOrEmpty(Model.Odpovedi[0].f21MinValue))
    {
        attrs += " min=" + Model.Odpovedi[0].f21MinValue.ConvertFromBL().ConvertToUnixTimestamp().ToString();
        help += "Min: " + Model.Odpovedi[0].f21MinValue.ConvertFromBL().ToString(AppConfig.UIFT_DateFormat);
    }
    if (!string.IsNullOrEmpty(Model.Odpovedi[0].f21MaxValue))
    {
        attrs += " max=" + Model.Odpovedi[0].f21MaxValue.ConvertFromBL().ConvertToUnixTimestamp().ToString();
        help += " Max: " + Model.Odpovedi[0].f21MaxValue.ConvertFromBL().ToString(AppConfig.UIFT_DateFormat);
    }
    attrs += " maxlength=12";
}
<td class="chessRowHeader @(string.IsNullOrEmpty(Model.Hint) ? "" : "otazkaNameHint")" title='@Model.Hint'>
    @Model.Name
    @if (help != string.Empty)
    {
        <span class="odpovedHint">@help</span>
    }
    @if (!string.IsNullOrEmpty(Model.SupportingText)) // pomocny text
    {
        <p class="otazkaSuppText">@Model.SupportingText</p>
    }
</td>

<td>
    @if (persistentData.IsEncrypted && Model.IsEncrypted)
    {
        <input type="text" value="******" class="input_encrypted encrypted_date" disabled="disabled" />
    }
    else
    {
        <input type="text" class="date" name="Answer_@(Model.PID)" id="Answer_@(Model.PID)" data-answer='{ "f19id":@Model.PID, "f21id":@f21id }' value="@(odpoved.HasValue ? odpoved.Value.ToString(AppConfig.UIFT_DateFormat) : "")" maxlength="10" @attrs @(Model.ReadOnly ? "readonly=true" : "") />

        if (Model.ReplyType == BO.x24DataTypeEnum.tDateTime)
        {
            <input type="text" name="Answer_@(Model.PID)" id="Answer_@(Model.PID)_time" data-answer='{ "f19id":@Model.PID, "f21id":@f21id }' value="@(odpoved.HasValue ? odpoved.Value.ToString(AppConfig.UIFT_DateTimeFormat) : "")" maxlength="5" @(Model.ReadOnly ? "readonly=true" : "") />
        }
    }
</td>